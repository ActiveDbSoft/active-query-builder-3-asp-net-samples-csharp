@using ActiveQueryBuilder.Web.MVC
@using ActiveQueryBuilder.View.QueryView
@model ActiveQueryBuilder.Web.Server.QueryBuilder
@{
    ViewBag.Title = "Custom Expression Editor Demo";
    var controls = Html.QueryBuilder(Model);
}

<div class="row">
    <div class="col-md-12">
        <h1>Custom Expression Editor Demo</h1>
        <p>Define own editor to deal with complex SQL expressions.</p>
    </div>
    <div class="col-md-12">
        @controls.GetHtml()
        <div class="qb-ui-layout">
            <div class="qb-ui-layout__top">
                <div class="qb-ui-layout__left">
                    <div class="qb-ui-structure-tabs">
                        <div class="qb-ui-structure-tabs__tab">
                            <input type="radio" id="tree-tab" name="qb-tabs" checked />
                            <label class="ui-widget-header qb-widget-header" for="tree-tab">Database</label>
                            <div class="qb-ui-structure-tabs__content">
                                @controls.ObjectTreeView().GetHtml()
                            </div>
                        </div>
                    </div>
                </div>
                <div class="qb-ui-layout__right">
                    @controls.SubQueryNavigationBar().GetHtml()
                    @controls.Canvas().GetHtml()
                    @controls.StatusBar().GetHtml()
                    @controls.Grid(s => { s.UseCustomExpressionBuilder = AffectedColumns.ExpressionColumn; }).GetHtml()
                </div>
            </div>
            <div class="qb-ui-layout__bottom">
                @controls.SqlEditor().GetHtml()
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
    <script>
        AQB.Web.onApplicationReady(function () {
            AQB.Web.QueryBuilder.GridComponent.on(AQB.Web.QueryBuilder.GridComponent.Events.GridBeforeCustomEditCell, BeforeCustomEditCell);
        });
        
        function BeforeCustomEditCell(data) {
            var row = data.dto;
            var cell = data.cell;
            var html = "";
            var oldValue = data.value || '';
            
            html += "<p>Expression:" + row.Expression + "</p>";
            html += "<textarea name='value' cols='36'>" + oldValue + "</textarea>";
            
            var $dialog = $('<div>Waiting server event handler...</div>')
                .dialog({
                    modal: true,
                    width: 'auto',
                    title: 'Custom expression editor',
                    buttons: [
                        {
                            text: "OK",
                            click: function () {
                                var newValue = $(this).find('textarea').val();
                                cell.updateValue(newValue);
                                $(this).dialog("close");
                            }
                        },
                        {
                            text: "Cancel",
                            click: function () {
                                $(this).dialog("close");
                            }
                        }
                    ]
                });

            $dialog.html(html);
        };
    </script>
}
